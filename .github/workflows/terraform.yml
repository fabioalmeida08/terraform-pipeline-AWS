name: "Terraform Workflow"

on:
  push:
    branches:
      - develop
      - main

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    environment: ${{ github.ref == 'refs/heads/develop' && 'dev' || 'prod' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    env:
      ENV: ${{ github.ref == 'refs/heads/develop' && 'dev' || 'prod' }}  # Definido uma vez aqui
      TF_VAR_env_name: ${{ secrets.ENV_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ASSUME_ROLE_ARN }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: "us-east-1"

      - name: Read destroy configuration
        id: read-destroy-config
        run: |
          DESTROY="$(jq -r \".$ENV\" ./infra/destroy_config.json)"
          echo "destroy=$(echo $DESTROY)" >> $GITHUB_OUTPUT

      - name: Terraform Init
        run: |
          cd infra && terraform init \
            -backend-config="bucket=fabioalmeida08-us-east-1-terraform-pipeline" \
            -backend-config="key=${{ github.event.repository.name }}" \
            -backend-config="region=us-east-1" \
            -backend-config="dynamodb_table=fabioalmeida08-us-east-1-terraform-lock"

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Destroy
        if: steps.read-destroy-config.outputs.destroy == 'true'
        id: terraform-destroy
        run: cd infra &&
          terraform workspace select $ENV || terraform workspace new $ENV &&
          terraform destroy -var-file="./envs/$ENV/terraform.tfvars" -auto-approve

      - name: Terraform Plan
        if: steps.read-destroy-config.outputs.destroy != 'true'
        id: terraform-plan
        run: cd infra &&
          terraform workspace select $ENV || terraform workspace new $ENV &&
          terraform plan -var-file="./envs/$ENV/terraform.tfvars" -out="$ENV.plan"

      - name: Terraform Apply
        if: steps.read-destroy-config.outputs.destroy != 'true'
        id: terraform-apply
        run: cd infra &&
          terraform workspace select $ENV || terraform workspace new $ENV &&
          terraform apply "$ENV.plan"

      - name: Printar Token
        id: printar-token
        run: echo $TF_VAR_telegram_token >> texto.txt && cat texto.txt